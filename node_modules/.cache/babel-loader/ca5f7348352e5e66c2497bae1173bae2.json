{"ast":null,"code":"import _toConsumableArray from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [{\n        content: 'Повторить теорию Redux',\n        done: false\n      }, {\n        content: 'Написать Todo приложение',\n        done: false\n      }, {\n        content: 'Передалать компонент автокомплит',\n        done: false\n      }, {\n        content: 'перевести статью',\n        done: true\n      }, {\n        content: 'домашнее задание немецкий',\n        done: true\n      }],\n      text: ''\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState(function (prevState) {\n        return {\n          text: value\n        };\n      });\n    };\n\n    _this.onClick = function (_ref2) {\n      var id = _ref2.target.id;\n      var clickedTask = _this.state.tasks[id];\n      var updatedTask = {\n        content: clickedTask.content,\n        done: !clickedTask.done\n      };\n      var updatedTasks = _this.state.tasks;\n      updatedTasks.splice(id, 1, updatedTask);\n\n      _this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    _this.onSubmitForm = function (e) {\n      e.preventDefault();\n      var newTask = {\n        content: _this.state.text,\n        done: false\n      };\n\n      _this.setState(function (prevState) {\n        return {\n          tasks: [newTask].concat(_toConsumableArray(prevState.tasks)),\n          text: ''\n        };\n      });\n    };\n\n    _this.deleteTask = function (e) {\n      e.preventDefault();\n      var id = e.target.id;\n      console.log('deleting');\n      var updatedTasks = _this.state.tasks;\n      updatedTasks.splice(id, 1);\n\n      _this.setState({\n        tasks: updatedTasks\n      });\n\n      console.log('state', _this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log('state', this.state);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(TodoForm, {\n        onSubmitForm: this.onSubmitForm,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTask,\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/marina/todo/src/App.js"],"names":["React","Component","TodoForm","TodoList","App","state","tasks","content","done","text","onChange","value","target","setState","prevState","onClick","id","clickedTask","updatedTask","updatedTasks","splice","onSubmitForm","e","preventDefault","newTask","deleteTask","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    tasks: [{content: 'Повторить теорию Redux', done: false},\n           {content: 'Написать Todo приложение', done: false},\n           {content: 'Передалать компонент автокомплит', done: false},\n           {content: 'перевести статью', done: true},\n           {content: 'домашнее задание немецкий', done: true}\n  ],\n  text: ''};\n\n  onChange = ({ target: { value } }) => {\n\n    this.setState(prevState => ({\n    text: value}))\n  }\n\n    onClick = ({ target: { id } }) => {\n          const clickedTask = this.state.tasks[id];\n          const updatedTask = {content: clickedTask.content, done: !clickedTask.done};\n          const updatedTasks = this.state.tasks;\n          updatedTasks.splice(id, 1, updatedTask);\n          this.setState({tasks: updatedTasks})\n    }\n\n    onSubmitForm = (e) => {\n      e.preventDefault();\n      const newTask = {content: this.state.text, done: false};\n      this.setState(prevState => ({\n          tasks: [newTask, ...prevState.tasks],\n          text: ''\n\n      }));\n  }\n\n  deleteTask = (e) => {\n      e.preventDefault();\n      const id = e.target.id;\n      console.log('deleting')\n      const updatedTasks = this.state.tasks;\n      updatedTasks.splice(id, 1);\n      this.setState({tasks: updatedTasks})\n      console.log('state', this.state)\n  }\n\n\n  render() {\n    console.log('state', this.state);\n    return (\n      <div className=\"App\">\n        <TodoForm onSubmitForm = {this.onSubmitForm} onChange = {this.onChange}/>\n        <TodoList tasks = {this.state.tasks} deleteTask = {this.deleteTask} onClick = {this.onClick}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}