{"ast":null,"code":"import _objectSpread from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport uuidv4 from 'uuid/v4';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [{\n        content: 'Read 30 pages from the book',\n        done: false,\n        id: uuidv4(),\n        isEdited: false\n      }, {\n        content: 'Write a letter',\n        done: false,\n        id: uuidv4(),\n        isEdited: false\n      }, {\n        content: 'Prepare for tomorrow',\n        done: true,\n        id: uuidv4(),\n        isEdited: false\n      }],\n      text: '',\n      taskToEdit: 0\n    };\n\n    _this.onChangeInputValue = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        text: value\n      });\n    };\n\n    _this.setToDoDone = function (_ref2) {\n      var id = _ref2.target.id;\n\n      var tasksCopy = _toConsumableArray(_this.state.tasks);\n\n      var clickedTaskIndex = tasksCopy.findIndex(function (item) {\n        return item.id === id;\n      });\n      tasksCopy[clickedTaskIndex].done = !tasksCopy[clickedTaskIndex].done;\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          tasks: tasksCopy\n        });\n      });\n    };\n\n    _this.addNewTask = function () {\n      if (_this.state.text === \"\") return;\n      var newTask = {\n        content: _this.state.text,\n        done: false,\n        id: uuidv4()\n      };\n\n      _this.setState(function (prevState) {\n        return {\n          tasks: [newTask].concat(_toConsumableArray(prevState.tasks)),\n          text: ''\n        };\n      });\n    };\n\n    _this.onDeleteTask = function (id) {\n      _this.setState(function (prevState) {\n        return {\n          tasks: prevState.tasks.filter(function (item) {\n            return item.id !== id;\n          })\n        };\n      });\n    };\n\n    _this.onEditTask = function (id, content) {\n      console.log(\"start edit, id, content\", id, content);\n\n      var tasksCopy = _toConsumableArray(_this.state.tasks); //const clickedTask = tasksCopy.find(item => item.id === id);\n      //const updatedContent = clickedTask.content;\n\n\n      var clickedTaskIndex = tasksCopy.findIndex(function (item) {\n        return item.id === id;\n      });\n\n      if (tasksCopy[clickedTaskIndex].isEdited === true) {\n        tasksCopy[clickedTaskIndex].content = _this.state.text;\n      }\n\n      tasksCopy[clickedTaskIndex].isEdited = !tasksCopy[clickedTaskIndex].isEdited;\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          text: content,\n          tasks: tasksCopy\n        });\n      });\n    };\n\n    _this.addEditedTask = function (id) {\n      if (_this.state.text === \"\") return;\n\n      var tasksCopy = _toConsumableArray(_this.state.tasks);\n\n      var clickedTaskIndex = tasksCopy.findIndex(function (item) {\n        return item.id === id;\n      });\n      tasksCopy[clickedTaskIndex].content = _this.state.text;\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          tasks: tasksCopy,\n          text: '',\n          taskToEdit: 0\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"render with\", this.state);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"To do list\")), React.createElement(TodoForm, {\n        addNewTask: this.addNewTask,\n        tasks: this.state.task,\n        onChangeInputValue: this.onChangeInputValue,\n        text: this.state.text,\n        textInput: this.textInput,\n        onEditTask: this.onEditTask,\n        taskToEdit: this.state.taskToEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        tasks: this.state.tasks,\n        onDeleteTask: this.onDeleteTask,\n        onEditTask: this.onEditTask,\n        setToDoDone: this.setToDoDone,\n        taskToEdit: this.state.taskToEdit,\n        addEditedTask: this.addEditedTask,\n        onChangeInputValue: this.onChangeInputValue,\n        text: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/marina/todo/src/App.js"],"names":["React","Component","TodoForm","TodoList","uuidv4","App","state","tasks","content","done","id","isEdited","text","taskToEdit","onChangeInputValue","value","target","setState","setToDoDone","tasksCopy","clickedTaskIndex","findIndex","item","prevState","addNewTask","newTask","onDeleteTask","filter","onEditTask","console","log","addEditedTask","task","textInput"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport uuidv4 from 'uuid/v4';\n\n\n\nclass App extends Component {\n\n    state = {\n        tasks: [{content: 'Read 30 pages from the book', done: false, id: uuidv4(), isEdited: false},\n            {content: 'Write a letter', done: false, id: uuidv4(), isEdited: false},\n            {content: 'Prepare for tomorrow', done: true, id: uuidv4(), isEdited: false}\n        ],\n        text: '',\n        taskToEdit: 0,\n    };\n\n\n    onChangeInputValue = ({target: {value}}) => {\n        this.setState({\n            text: value\n        })\n    }\n\n    setToDoDone = ({target: {id}}) => {\n        const tasksCopy = [...this.state.tasks];\n        const clickedTaskIndex = tasksCopy.findIndex((item => item.id === id))\n        tasksCopy[clickedTaskIndex].done = !tasksCopy[clickedTaskIndex].done;\n        this.setState(prevState => ({...prevState, tasks: tasksCopy }) )\n    }\n\n     addNewTask = () => {\n        if (this.state.text === \"\") return;\n        const newTask = {content: this.state.text, done: false, id: uuidv4()};\n        this.setState(prevState => ({\n            tasks: [newTask, ...prevState.tasks],\n            text: '',\n        }));\n    }\n\n    onDeleteTask = (id) => {\n        this.setState(prevState => ({ tasks: prevState.tasks.filter(item => item.id !== id) }))\n    }\n\n    onEditTask = (id, content) => {\n        console.log(\"start edit, id, content\", id, content)\n        const tasksCopy = [...this.state.tasks];\n        //const clickedTask = tasksCopy.find(item => item.id === id);\n        //const updatedContent = clickedTask.content;\n        const clickedTaskIndex = tasksCopy.findIndex((item => item.id === id))\n        if (tasksCopy[clickedTaskIndex].isEdited === true) {\n            tasksCopy[clickedTaskIndex].content = this.state.text;\n        }\n        tasksCopy[clickedTaskIndex].isEdited = !tasksCopy[clickedTaskIndex].isEdited;\n        this.setState(prevState => ({...prevState,\n             text: content,\n             tasks: tasksCopy }));\n\n    }\n\n    addEditedTask = (id) => {\n        if (this.state.text === \"\") return;\n        const tasksCopy = [...this.state.tasks];\n        const clickedTaskIndex = tasksCopy.findIndex((item => item.id === id))\n        tasksCopy[clickedTaskIndex].content = this.state.text;\n        this.setState(prevState => ({...prevState,\n            tasks: tasksCopy,\n            text: '',\n            taskToEdit: 0,\n        }));\n    }\n\n\n    render() {\n     console.log(\"render with\", this.state)\n         return (\n            <div className=\"App\">\n                <div className='header'>\n                    <p className='header-title'>To do list</p>\n                </div>\n                <TodoForm addNewTask={this.addNewTask} tasks = {this.state.task} onChangeInputValue={this.onChangeInputValue} text={this.state.text} textInput = {this.textInput} onEditTask={this.onEditTask} taskToEdit = {this.state.taskToEdit}/>\n                <TodoList tasks={this.state.tasks} onDeleteTask={this.onDeleteTask} onEditTask={this.onEditTask}\n                          setToDoDone={this.setToDoDone} taskToEdit = {this.state.taskToEdit} addEditedTask={this.addEditedTask} onChangeInputValue={this.onChangeInputValue} text={this.state.text}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}