{"ast":null,"code":"import _toConsumableArray from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marina/todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marina/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: [{\n        content: 'Пример задания 1',\n        done: false,\n        index: 1\n      }, {\n        content: 'Пример задания 2',\n        done: false,\n        index: 2\n      }, {\n        content: 'Пример задания 3',\n        done: true,\n        index: 3\n      }],\n      text: ''\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        text: value\n      });\n    };\n\n    _this.onClick = function (_ref2) {\n      var id = _ref2.target.id;\n      var clickedTask = _this.state.tasks[id];\n      var updatedTask = {\n        content: clickedTask.content,\n        done: !clickedTask.done,\n        index: clickedTask.index\n      };\n      var updatedTasks = _this.state.tasks;\n      updatedTasks.splice(id, 1, updatedTask);\n\n      _this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    _this.onSubmitForm = function (e) {\n      e.preventDefault();\n      var index = _this.state.tasks.length + 1;\n      var newTask = {\n        content: _this.state.text,\n        done: false,\n        index: index\n      };\n\n      _this.setState(function (prevState) {\n        return {\n          tasks: [].concat(_toConsumableArray(prevState.tasks), [newTask]),\n          text: ''\n        };\n      });\n    };\n\n    _this.deleteTask = function (e) {\n      e.preventDefault();\n      var id = e.target.id;\n      console.log('id', id);\n      var updatedTasks = _this.state.tasks;\n      updatedTasks.splice(id, 1);\n\n      _this.setState({\n        tasks: updatedTasks\n      });\n    };\n\n    _this.editTask = function (e) {\n      e.preventDefault();\n      var target = e.target;\n      var id = target.id.slice(1);\n      console.log('id', id);\n      var clickedTask = _this.state.tasks[id];\n      var updatedContent = clickedTask.content;\n      var updatedTasks = _this.state.tasks;\n      updatedTasks.splice(id, 1);\n\n      _this.setState({\n        tasks: updatedTasks,\n        text: updatedContent\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"To do list\")), React.createElement(TodoForm, {\n        onSubmitForm: this.onSubmitForm,\n        onChange: this.onChange,\n        text: this.state.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(TodoList, {\n        tasks: this.state.tasks,\n        deleteTask: this.deleteTask,\n        editTask: this.editTask,\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/marina/todo/src/App.js"],"names":["React","Component","TodoForm","TodoList","App","state","tasks","content","done","index","text","onChange","value","target","setState","onClick","id","clickedTask","updatedTask","updatedTasks","splice","onSubmitForm","e","preventDefault","length","newTask","prevState","deleteTask","console","log","editTask","slice","updatedContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport './App.css';\n\n\nclass App extends Component {\n\n  state = {\n    tasks: [{content: 'Пример задания 1', done: false, index: 1},\n           {content: 'Пример задания 2', done: false, index: 2},\n           {content: 'Пример задания 3', done: true, index: 3}\n     ],\n      text: ''};\n\n  onChange = ({ target: { value } }) => {\n    this.setState({\n    text: value})\n  }\n\n    onClick = ({ target: { id } }) => {\n          const clickedTask = this.state.tasks[id];\n          const updatedTask = {content: clickedTask.content, done: !clickedTask.done, index: clickedTask.index};\n          const updatedTasks = this.state.tasks;\n          updatedTasks.splice(id, 1, updatedTask);\n          this.setState({tasks: updatedTasks})\n    }\n\n    onSubmitForm = (e) => {\n      e.preventDefault();\n      const index = this.state.tasks.length + 1;\n      const newTask = {content: this.state.text, done: false, index: index};\n      this.setState(prevState => ({\n          tasks: [...prevState.tasks, newTask ],\n          text: ''\n      }));\n  }\n\n  deleteTask = (e) => {\n      e.preventDefault();\n\n      const id = e.target.id;\n      console.log('id', id)\n\n      const updatedTasks = this.state.tasks;\n      updatedTasks.splice(id, 1);\n      this.setState({tasks: updatedTasks})\n\n  }\n\n    editTask = (e) => {\n        e.preventDefault();\n        const target = e.target;\n        const id = target.id.slice(1);\n        console.log('id', id)\n        const clickedTask = this.state.tasks[id];\n        const updatedContent = clickedTask.content;\n        const updatedTasks = this.state.tasks;\n        updatedTasks.splice(id, 1);\n        this.setState({tasks: updatedTasks, text: updatedContent })\n    }\n\n  render() {\n     return (\n      <div className=\"App\">\n          <div className= 'header'>\n              <p className='header-title'>To do list</p>\n          </div>\n        <TodoForm onSubmitForm = {this.onSubmitForm} onChange = {this.onChange} text = {this.state.text}/>\n        <TodoList tasks = {this.state.tasks} deleteTask = {this.deleteTask} editTask = {this.editTask} onClick = {this.onClick}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}